
my_fs.define("pair", ("id", "k_1"), "piggyback_1", "Pairs up x with 1: <x.1>")

my_fs.define("comp", ("diff", "piggyback_1"), "ant", "The ant function")

my_fs.define("pair", ("id", "ant"), "piggyback_ant", "Pairs up x with its predecessor")

my_fs.define("comp", ("diff", "piggyback_ant"), "sign", "Sign: 0 for 0, 1 for the rest")

my_fs.define("comp", ("sign", "diff"), "gt", "x > y in <x.y>")

my_fs.define("pair", ("k_1", "k_1"), "const_pair_1", "The constant <1.1> function")

my_fs.define("comp", ("diff", "const_pair_1"), "k_0", "The constant 0 function")

my_fs.define("pair", ("id", "k_0"), "piggyback_0", "Pairs up x with 0: <x.0>")

my_fs.define("comp", ("proj", "piggyback_0"), "pr_l", "The pr_l function")

my_fs.define("comp", ("s_tup", "piggyback_1"), "pr_r", "The pr_r function")

my_fs.define("pair", ("pr_r", "pr_l"), "swap", "From <x.y> to <y.x>")

my_fs.define("comp", ("diff", "swap"), "swap_diff", "diff(<y.x>)")

my_fs.define("comp", ("sign", "swap_diff"), "lt", "x < y in <x.y>")

